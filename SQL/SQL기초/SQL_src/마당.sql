SELECT * FROM BOOK;

-- 3-(7)
SELECT BOOKNAME
FROM BOOK B1
WHERE NOT EXISTS
    (SELECT BOOKNAME 
    FROM CUSTOMER, ORDERS
    WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
    AND B1.BOOKID = ORDERS.BOOKID
    AND CUSTOMER.NAME LIKE '박지성');

-- 3-(8)
SELECT NAME
FROM CUSTOMER C1
WHERE NAME NOT IN
    (SELECT NAME
    FROM CUSTOMER, ORDERS
    WHERE CUSTOMER.CUSTID = ORDERS.CUSTID);

-- 3-(9)
SELECT SUM(SALEPRICE)
        , AVG(SALEPRICE)
    FROM ORDERS;
    
-- 3-(10)
SELECT NAME
     , SUM(SALEPRICE)
    FROM CUSTOMER, ORDERS
    WHERE CUSTOMER.CUSTID = ORDERS.CUSTID
    GROUP BY NAME;
    
-- 3-(11)
SELECT TO_CHAR(C.NAME)
     , B.BOOKNAME
    FROM CUSTOMER C, BOOK B, ORDERS O
    WHERE C.CUSTID = O.CUSTID
    AND O.BOOKID = B.BOOKID
    ORDER BY C.NAME;
    
-- 3-(12)
SELECT *
    FROM BOOK, ORDERS
    WHERE BOOK.BOOKID = ORDERS.BOOKID
    AND PRICE - SALEPRICE = 
    (SELECT MAX(PRICE - SALEPRICE)
    FROM BOOK, ORDERS
    WHERE BOOK.BOOKID = ORDERS.BOOKID);
    
-- 3-(13)
-- 전체 도서 평균 판매액AVG(ORDERS.SALEPRICE) < 개개인별 구매액 평균(AVG(ORDERS.SALEPRICE)CUSTOMER.CUSTID = ORDERS.CUSTID 
SELECT NAME
FROM CUSTOMER, ORDERS
WHERE AVG(ORDERS.SALEPRICE) < 
(SELECT AVG(ORDERS.SALEPRICE) 
FROM ORDERS, CUSTOMER 
WHERE CUSTOMER.CUSTID = ORDERS.CUSTID);GYTG

    